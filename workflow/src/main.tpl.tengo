// "hello world"
wf := import("@platforma-sdk/workflow-tengo:workflow")
exec := import("@platforma-sdk/workflow-tengo:exec")
assets:= import("@platforma-sdk/workflow-tengo:assets")
llPFrames := import("@platforma-sdk/workflow-tengo:pframes.ll")

// FastQC program template
fastqcTpl := assets.importTemplate(":fastqc")


// Prepare input inherited from previous job
wf.prepare(func(args){
	return{
		// reference to Fastq files
		resolvedFastq: wf.resolve(args.refData, { errIfMissing: true })
	}
})

wf.body(func(args) {
	blockId := wf.blockId().getDataAsJson()
	input := args.resolvedFastq
	inputSpec := input.spec
	species := args.species


	// Fastq or Fastq.gz
	fileExtension := inputSpec.domain["pl7.app/fileExtension"]

	aggregationTargets := [{
		type: "Resource",
		name: "FastQCzip_r1"
	}, {
		type: "Resource",
		name: "FastQChtml_r1"
	}, {
		type: "Resource",
		name: "FastQCzip_r2"
	}, {
		type: "Resource",
		name: "FastQChtml_r2"
	},{
		type: "Resource",
		name: "fastqcStdout"
	}]

	fastqcResults := llPFrames.aggregate(
		input.data, [1], fastqcTpl,
		aggregationTargets,
		false,
		{
			blockId: blockId,
			fileExtension: fileExtension
		}
	)

	// Create FastQC ZIP output specs
	fastqcZipPf_r1 := {
		"fastQC.spec":
		{
			kind: "PColumn",
			name: "zipFile",
			domain: {
				"pl7.app/blockId": blockId
			},
			valueType: "Double",
			axesSpec: [
				inputSpec.axesSpec[0],
				{
					"name": "pl7.app/fastQC/zip",
					"type": "String",
					"domain": {
						"pl7.app/blockId": blockId,
						"pl7.app/species": species
					},
					"annotations": {
						"pl7.app/label": "FastQC"
					}
				}
				],
			annotations: {"pl7.app/label": "FastQC output Zip file"}
		},
		"fastQC.data": fastqcResults.output("FastQCzip_r1")
	}

	fastqcZipPf_r2 := {
		"fastQC.spec":
		{
			kind: "PColumn",
			name: "zipFile",
			domain: {
				"pl7.app/blockId": blockId
			},
			valueType: "Double",
			axesSpec: [
				inputSpec.axesSpec[0],
				{
					"name": "pl7.app/fastQC/zip",
					"type": "String",
					"domain": {
						"pl7.app/blockId": blockId,
						"pl7.app/species": species
					},
					"annotations": {
						"pl7.app/label": "FastQC"
					}
				}
				],
			annotations: {"pl7.app/label": "FastQC output Zip file"}
		},
		"fastQC.data": fastqcResults.output("FastQCzip_r2")
	}

	return {
		outputs: {
			fastqcStdout: fastqcResults.output("fastqcStdout"),
			fastqcZipPf_r1: fastqcZipPf_r1,
			fastqcZipPf_r2: fastqcZipPf_r2
			
		},

		exports: {}
	}
})

